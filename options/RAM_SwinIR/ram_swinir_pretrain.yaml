base:
- options/base/dataset/ram_train_dataset.yaml #train dataset
- options/base/net_g/SwinIR_patch_1.yaml #net_g

# general settings
name: ram_swinir_pretrain
model_type: RAMPretrainModel
num_gpu: 8
manual_seed: 0
#MIM option
mim:
  model_patch_size: 1
  mask_patch_size: 1
  mask_ratio: 0.5
  mask_type: 'binary' # 'random' or 'binary'
  scale: 1
gt_size: 64
queue_size: 192
# dataset and data loader settings
datasets:
  train: 
    # data loader
    num_worker_per_gpu: 6
    batch_size_per_gpu: 12

# path
path:
  pretrain_network_g: ~
  param_key_g: params_ema
  strict_load_g: true
  pretrain_network_d: ~
  strict_load_d: true
  resume_state: ~

train:
  optim_g:
    type: Adam
    lr: !!float 1e-4
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    type: CosineAnnealingLR
    T_max: 400000
    # restart_weights: [1]
    eta_min: !!float 1e-6
  
  total_iter: 400000

  warmup_iter: 10  # no warm up
  ema_decay: 0.995 # GFPGAN: 0.5**(32 / (10 * 1000) == 0.998; Unleashing: 0.995

  pixel_opt:
    type: MaskL1Loss
    loss_weight: 1.0
    reduction: mean
    patch_size: 1
    
  manual_seed: 0

# validation settings
val:
  val_freq: !!float 5e10 # no validation
  save_img: true

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 4
      test_y_channel: false

# logging settings
logger:
  print_freq: 200
  save_checkpoint_freq: !!float 1e4
  train_image_visual: true
  use_tb_logger: false
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29411

find_unused_parameters: true
