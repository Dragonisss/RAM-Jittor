base:
- options/base/dataset/ram_train_dataset.yaml #train dataset
- options/base/net_g/promptir.yaml #net_g

# general settings
name: ram_promptir_finetune
model_type: RAMFinetuneModel
manual_seed: 0

gt_size: 128
queue_size: 160
scale: 1
test_num: 350
save_num: 100

network_g:
  finetune_type: cond

finetune_block:
  filter_txt_path: mac_analysis_result/ram_promptir_mac/filter_name.txt
  filter_ratio: 0.3

# dataset and data loader settings
datasets:
    # data loader
    train:
      num_worker_per_gpu: 4
      batch_size_per_gpu: 4
      pin_memory: true

# path
path:
  pretrain_network_g: pretrained_model/ram_promptir_pretrain.pth
  param_key_g: model
  strict_load_g: false
  resume_state: ~

train:
  optim_g:
    type: Adam
    lr: !!float 2e-4
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    type: CosineAnnealingLR
    T_max: 1200000
    # restart_weights: [1]
    eta_min: !!float 1e-6

  total_iter: 160000
  warmup_iter: 4000

  pixel_opt:
    type: L1Loss
    loss_weight: 1
    reduction: mean

  net_g_start_iter: 0
  net_d_iters: 1
  net_d_start_iter: 30001
  manual_seed: 0

# validation settings
val:
  val_freq: !!float 5e10 # no validation
  save_img: true

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 4
      test_y_channel: false

# logging settings
logger:
  print_freq: 200
  save_checkpoint_freq: !!float 2e3
  train_image_visual: true
  use_tb_logger: false
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29411

find_unused_parameters: true


